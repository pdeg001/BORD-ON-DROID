Build1=Default,nl.pdeg.bordondroid
File1=2.bal
File10=main.bal
File11=materialdesignicons-webfont.ttf
File12=mouse.png
File13=ServerBoard.bal
File14=wacht_op_data.png
File2=Baloo2-Bold.ttf
File3=Baloo2-ExtraBold.ttf
File4=Baloo2-Medium.ttf
File5=Baloo2-Regular.ttf
File6=Baloo2-SemiBold.ttf
File7=clvBorden.bal
File8=digital-7.ttf
File9=IMG-20200421-WA0000.jpg
FileGroup1=Default Group
FileGroup10=Default Group
FileGroup11=Default Group
FileGroup12=Default Group
FileGroup13=Default Group
FileGroup14=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
FileGroup9=Default Group
Group=Default Group
Library1=core
Library10=phone
Library2=jmqtt
Library3=randomaccessfile
Library4=network
Library5=ime
Library6=javaobject
Library7=byteconverter
Library8=json
Library9=customlistview
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="21" android:targetSdkVersion="28"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~
Module1=Chat
Module2=mqttGetBordData
Module3=mqttGetBords
Module4=ServerBoard
Module5=Starter
NumberOfFiles=14
NumberOfLibraries=10
NumberOfModules=5
Version=9.801
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: Board On Droid
	#VersionCode: 1
	#VersionName: 0.11
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: landscape
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: true
	#IncludeTitle: false
#End Region

Sub Process_Globals
	Type Message (Body As String, From As String)
	Type bordStatus(ip As String, name As String, timeStamp As Long, alive As Boolean)
	Type bordFound(name As String, ip As String)
	
	Private mqttGetBord As mqttGetBords
	Private mqttGetData As mqttGetBordData
	Private tmrBordLastAlive As Timer
End Sub

Sub Globals
	Private clvServer As CustomListView
	Private lblBordName As Label
	Private lblViewBord As Label
	Private pnlBord As Panel
	Private lblIP As Label
	Private lblLastCheck As Label
	Private pnlNobords As Panel
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Activity.LoadLayout("main")
	mqttGetData.Initialize
	mqttGetBord.Initialize
	mqttGetBord.Connect

	tmrBordLastAlive.Initialize("tmrBordAlive", 10000)
	tmrBordLastAlive.Enabled = True
End Sub

Sub tmrBordAlive_Tick
	ServerAlive
End Sub

Sub Activity_Resume
	If Starter.mqttGetBordsActive Then
		mqttGetBord.Connect
	End If
End Sub

Sub Activity_Pause (UserClosed As Boolean)
 	If Starter.mqttGetBordsActive Then
		mqttGetBord.Disconnect
	End If
End Sub

Private Sub Activity_KeyPress(KeyCode As Int) As Boolean
	If KeyCode = KeyCodes.KEYCODE_BACK Then
		tmrBordLastAlive.Enabled = False
		Activity.Finish
		
		Return False
	Else
		Return False
	End If
End Sub

Sub ShowUnits
	'clvServer.Clear
	For Each brd As bordStatus In Starter.serverList
		clvServer.Add(genUnitList(brd.ip, brd.alive, ""),130dip, "")
	Next
	
End Sub

Sub genUnitList(name As String, alive As Boolean, ip As String) As Panel
	Dim p As Panel
	p.Initialize(Me)
	p.SetLayout(0dip, 0dip, clvServer.AsView.Width, 85dip) '190
	p.LoadLayout("clvBorden")
	p.Tag = name
	
	lblBordName.Text = name.Trim
	lblLastCheck.Text = $"Laatste controle $Time{DateTime.Now}"$
	If Not(alive) Then
		lblViewBord.Enabled = False
	End If
	Return p
End Sub


Sub CheckIpExits(bord As String, bordDied As Boolean)
	
	Dim ipFound As Boolean = False
	Dim name As String = ""
	
	If bord.Length = 0 Then Return
	
	name = bord

	If Starter.serverList.Size = 0 Then
		AddUnkownIp("", name)
		Return
	End If
	
	For Each lst As bordStatus In Starter.serverList
		If lst.name = name Then
			ipFound = True
			lst.timeStamp = DateTime.Now
			lst.alive = True
		End If
	Next
	
	ServerAlive
'	For Each lst As bordStatus In Starter.serverList
'		If(msNow - lst.timeStamp) > Starter.serverDied And lst.alive = True Then
'			lst.alive = False
'			CheckIpInClv(lst)
'			Return
'		Else
'			CheckIpInClv(lst)
'		End If
'	Next
	
	If Not(ipFound) Then
		AddUnkownIp("", name)
		Return
	End If
End Sub

Sub ServerAlive
'	Log($"BORD ALIVE TEST at $Time{DateTime.Now}"$)
	Dim msNow As Long = DateTime.Now
	For Each lst As bordStatus In Starter.serverList
		If(msNow - lst.timeStamp) > Starter.serverDied And lst.alive = True Then
			lst.alive = False
			CheckIpInClv(lst)
			Return
		Else
			CheckIpInClv(lst)
		End If
	Next
End Sub

Sub AddUnkownIp(ip As String, name As String)
	Dim bordStatus As bordStatus
	bordStatus.Initialize
	bordStatus.ip = ip
	bordStatus.name = name
	bordStatus.timeStamp = DateTime.Now
	bordStatus.alive = True
	Starter.serverList.Add(bordStatus)
	CheckIpInClv(bordStatus)
	
	If clvServer.GetSize > 0 Then
		pnlNobords.SetVisibleAnimated(1000, False)
	Else 
		pnlNobords.SetVisibleAnimated(1000, True)	
	End If
	Sleep(1000)
	
End Sub

Sub CheckIpInClv(bord As bordStatus)
	Dim p As Panel
	Dim lbl As Label
	
	For i = 0 To clvServer.GetSize-1
		p = clvServer.GetPanel(i)
		If p.Tag = bord.name Then
			For Each v As View In p.GetAllViewsRecursive
			If v.Tag = "lblLastCheck" Then
				lbl = v
				lbl.Text = $"Laatste controle $Time{DateTime.Now}"$
			End If
			Next
			
			For Each v As View In p.GetAllViewsRecursive
				If v.Tag = "viewbord" Then
					lbl = v
					If bord.alive = False Then
						lbl.Enabled = False
						lbl.TextColor = Colors.Red
					Else
						lbl.Enabled = True
						lbl.TextColor = Colors.Black
					End If
					Return
				End If
			Next
		End If
	Next
	
'	Log("------ ADD BORD TO LIST")
	clvServer.Add(genUnitList(bord.name, bord.alive, bord.ip),130dip, "")
End Sub

Sub lblViewBord_Click
	Dim v As View = Sender
	Dim p As Panel = v.Parent
	Dim lbl As Label
	
	
	For Each c As View In p.GetAllViewsRecursive
		If c.Tag = "name" Then
			lbl = c
			Starter.selectedBordName = PrepTopicName(lbl.Text)
			Starter.DiscoveredServer = lbl.Text
			Exit
		End If
	Next
	
	If mqttGetBord.connected Then
		mqttGetBord.Disconnect
	End If
	Sleep(100)

	StartActivity(ServerBoard)
End Sub

Private Sub PrepTopicName(bord As String) As String
	Log($"SUBBORD : ${bord.Replace(" ", "")}"$)
	Return bord.Replace(" ", "")
End Sub







